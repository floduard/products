version: '3.8'

services:
  web:
    build: .
    command: gunicorn ec.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app
      - ./staticfiles:/path/to/staticfiles
      - ./media:/app/media  # Mount the media directory
      
    expose:
      - "8000"
    depends_on:
      - db
    environment:
      - ALLOWED_HOSTS='www.brvn.work.gd'
  
    
    # networks:
    #   - caddy_network

  db:
    image: postgres:13
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      
    environment:
      - POSTGRES_DB=mydatabase
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword

  mail:
    image: catatnight/postfix
    environment:
      - maildomain=localhost
      - smtp_user=myuser:mypassword
    ports:
      - "25:25"
      - "587:587"
      - "465:465"
    volumes:
      - ./certs:/etc/ssl/postfix 
      - ./postfix:/etc/postfix  
      - ./postfix/spool:/var/spool/postfix  

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/nginx/certs
      - ./media:/app/media
      - ./static:/app/static
      - ./nginx-selfsigned.crt:/etc/nginx/ssl/nginx-selfsigned.crt
      - ./nginx-selfsigned.key:/etc/nginx/ssl/nginx-selfsigned.key
    ports:
      - "83:83"
      - "443:443"
    depends_on:
      - web

volumes:
  postgres_data:
 
#   caddy:
#       image: caddy:latest  # Caddy official image
#       container_name: caddy_server
#       ports:
#         - "81:81"    # HTTP port (Let's Encrypt uses this to issue certificates)
#         - "443:443"  # HTTPS port
#       depends_on:
#          - web
#       volumes:
#         - /home/brv/Desktop/daily/TEST/ec/Caddyfile:/etc/caddy/Caddyfile  # Mount the Caddyfile configuration
#         - caddy_data:/data  # Persist certificates and other Let's Encrypt data
#         - caddy_config:/config  # Persist Caddy's configuration
#       networks:
#         - caddy_network
#       restart: unless-stopped

# networks:
#   caddy_network:
#     driver: bridge

# volumes:
#   postgres_data:  # Declare the postgres_data volume here
  # caddy_data:     # Declare the caddy_data volume here
  # caddy_config: